PREDOWNLOADED_FILES=$(wildcard vshell*.*)

include urls.mk

COREUTILS_URL?=https://sourceforge.net/projects/gnuwin32/files/coreutils/5.3.0/coreutils-5.3.0-bin.zip/download\#/coreutils-5.3.0-bin.zip
LESSMSI_URL?=https://github.com/activescott/lessmsi/releases/download/v1.6.1/lessmsi-v1.6.1.zip
SEVENZIP_EXTRA_URL=http://www.7-zip.org/a/7z1604-extra.7z
UNXUTILS_URL?=https://sourceforge.net/projects/unxutils/files/unxutils/current/UnxUtils.zip/download\#/UnxUtils.zip

CHEF_32:=$(shell basename "$(CHEF_32_URL)")
CHEF_64:=$(shell basename "$(CHEF_64_URL)")
CHEFDK_32:=$(shell basename "$(CHEFDK_32_URL)")
CHEFDK_64:=$(shell basename "$(CHEFDK_64_URL)")
CHOCOLATEY:=$(shell basename "$(CHOCOLATEY_URL)")
COREUTILS:=$(shell basename "$(COREUTILS_URL)")
CYGWIN:=$(shell basename "$(CYGWIN_URL)")
DOTNET4:=$(shell basename "$(DOTNET4_URL)")
KB2842230_32:=$(shell basename "$(KB2842230_32_URL)")
KB2842230_64:=$(shell basename "$(KB2842230_64_URL)")
LESSMSI:=$(shell basename "$(LESSMSI_URL)")
OPENSSH:=$(shell basename "$(OPENSSH_URL)")
NUGET:=$(shell basename "$(NUGET_URL)")
PUPPET_32:=$(shell basename "$(PUPPET_32_URL)")
PUPPET_64:=$(shell basename "$(PUPPET_64_URL)")
POWERSHELL_32:=$(shell basename "$(POWERSHELL_32_URL)")
POWERSHELL_64:=$(shell basename "$(POWERSHELL_64_URL)")
SDELETE:=$(shell basename "$(SDELETE_URL)")
SALT_32:=$(shell basename "$(SALT_32_URL)")
SALT_64:=$(shell basename "$(SALT_64_URL)")
SCOOP:=$(shell basename "$(SCOOP_URL)")
SEVENZIP_32:=$(shell basename "$(SEVENZIP_32_URL)")
SEVENZIP_64:=$(shell basename "$(SEVENZIP_64_URL)")
SEVENZIP_EXTRA:=$(shell basename "$(SEVENZIP_EXTRA_URL)")
ULTRADEFRAG_32:=$(shell basename "$(ULTRADEFRAG_32_URL)")
ULTRADEFRAG_64:=$(shell basename "$(ULTRADEFRAG_64_URL)")
UNXUTILS:=$(shell basename "$(UNXUTILS_URL)")
VAGRANT_PUB:=$(shell basename "$(VAGRANT_PUB_URL)")
#VBOX_ISO=$(shell basename "$(VBOX_ISO_URL)")
VBOX_ISO=VBoxGuestAdditions.iso
VMWARE_TOOLS_TAR=$(shell basename "$(VMWARE_TOOLS_TAR_URL)")
WGET_EXE=$(shell basename "$(WGET_URL)")
WUA_64=$(shell basename "$(WUA_64_URL)")
WUA_32=$(shell basename "$(WUA_32_URL)")

TEE_EXE=tee.exe
UNZIP_EXE=unzip.exe

# $(shell find . -type f \( -name '*.exe' -o -name '*.msi' -o -name '*.pub' \) -printf '%P ')
FILES:=\
lessmsi.exe \
VBoxWindowsAdditions.exe \
VBoxWindowsAdditions-amd64.exe \
VBoxWindowsAdditions-x86.exe \
windows.iso \
Windows6.1-KB2842230-x64.msu \
Windows6.1-KB2842230-x86.msu \
$(CHEF_32) \
$(CHEF_64) \
$(CHEFDK_32) \
$(CHEFDK_64) \
$(CHOCOLATEY) \
$(COREUTILS) \
$(CYGWIN) \
$(DOTNET4) \
$(KB2842230_32) \
$(KB2842230_64) \
$(LESSMSI) \
$(OPENSSH) \
$(NUGET) \
$(POWERSHELL_32) \
$(POWERSHELL_64) \
$(PUPPET_32) \
$(PUPPET_64) \
$(SDELETE) \
$(SALT_32) \
$(SALT_64) \
$(SCOOP) \
$(SEVENZIP_32) \
$(SEVENZIP_64) \
$(SEVENZIP_EXTRA) \
$(TEE_EXE) \
$(ULTRADEFRAG_32) \
$(ULTRADEFRAG_64) \
$(UNZIP_EXE) \
$(VAGRANT_PUB) \
$(VBOX_ISO) \
$(VMWARE_TOOLS_TAR) \
$(WGET_EXE) \
$(WUA_64) \
$(WUA_32) \

IGNORE=\
#7z.exe \
#7z.dll \
#7za.exe \

WGET:=wget -U "" --no-check-certificate

help:
	@echo make
	@echo make all
	@echo make clean
	@echo make debug
	@echo make help
	@echo make iso
	@echo make realclean

all:	provisions.iso

iso:	provisions.iso

urls.mk:	../floppy/_packer_config.cmd
	@echo "# Do not edit this file directly, it's created automatically by 'make urls.mk'">$@
	@grep -P -i '^set\s+.*(_URL|_VERSION)=.' ../floppy/_packer_config.cmd | sed -r -e 's/^set\s*//g; s/%([A-Z_]+)%/$$(\1)/g; s/%%/%/g;' >>$@
	# egrep -i '^set.*(_URL|_VERSION)=.' $< | sed -e 's/^set //ig; s/-%/-$$\(/g; s/%-/\)-/g; s/%\./\)\./g; s/%%/%/g; s/\#/\\\#/g;' >>$@
	@echo urls.mk recreated. Please run make again.
	@false

provisions.iso: urls.mk $(FILES)
	-rm -f $@
	mkisofs -J -r -l -udf -o $@ $^ $(PREDOWNLOADED_FILES)

$(CHEF_32):
	$(WGET) -O $@ $(CHEF_32_URL)
	-rm -f provisions.iso

$(CHEF_64):
	$(WGET) -O $@ $(CHEF_64_URL)
	-rm -f provisions.iso

$(CHEFDK_32):
	$(WGET) -O $@ $(CHEFDK_32_URL)
	-rm -f provisions.iso

#$(CHEFDK_64):
#   $(WGET) -O $@ $(CHEFDK_64_URL)
#   -rm -f provisions.iso

$(CHOCOLATEY):
	$(WGET) -O $@ $(CHOCOLATEY_URL)
	-rm -f provisions.iso

$(COREUTILS):
	$(WGET) -O $@ $(COREUTILS_URL)
	-rm -f provisions.iso

$(CYGWIN):
	$(WGET) -O $@ $(CYGWIN_URL)
	-rm -f provisions.iso

$(DOTNET4):
	$(WGET) -O $@ $(DOTNET4_URL)
	-rm -f provisions.iso

$(KB2842230_32):
	$(WGET) -O $@ $(KB2842230_32_URL)
	-rm -f provisions.iso

$(KB2842230_64):
	$(WGET) -O $@ $(KB2842230_64_URL)
	-rm -f provisions.iso

$(LESSMSI):
	$(WGET) -O $@ $(LESSMSI_URL)
	-rm -f provisions.iso

$(OPENSSH):
	$(WGET) -O $@ $(OPENSSH_URL)
	-rm -f provisions.iso

$(NUGET):
	$(WGET) -O $@ $(NUGET_URL)
	-rm -f provisions.iso

$(POWERSHELL_32):
	$(WGET) -O $@ $(POWERSHELL_32_URL)
	-rm -f provisions.iso

$(POWERSHELL_64):
	$(WGET) -O $@ $(POWERSHELL_64_URL)
	-rm -f provisions.iso

$(PUPPET_32):
	$(WGET) -O $@ $(PUPPET_32_URL)
	-rm -f provisions.iso

$(PUPPET_64):
	$(WGET) -O $@ $(PUPPET_64_URL)
	-rm -f provisions.iso

$(SALT_32):
	$(WGET) -O $@ $(SALT_32_URL)
	-rm -f provisions.iso

$(SALT_64):
	$(WGET) -O $@ $(SALT_64_URL)
	-rm -f provisions.iso

$(SCOOP):
	$(WGET) -O $@ "$(SCOOP_URL)"
	-rm -f provisions.iso

$(SDELETE):
	$(WGET) -O $@ $(SDELETE_URL)
	-rm -f provisions.iso

$(SEVENZIP_32):
	$(WGET) -O $@ $(SEVENZIP_32_URL)
	-rm -f provisions.iso

$(SEVENZIP_64):
	$(WGET) -O $@ $(SEVENZIP_64_URL)
	-rm -f provisions.iso

$(SEVENZIP_EXTRA):
	$(WGET) -O $@ $(SEVENZIP_EXTRA_URL)
	-rm -f provisions.iso

$(TEE_EXE): $(UNXUTILS)
	unzip -o -j $< usr/local/wbin/$@
	-upx -9 $@
	touch --reference $@ $<
	-chmod +x $@
	-rm -f provisions.iso

$(ULTRADEFRAG_32):
	$(WGET) -O $@ $(ULTRADEFRAG_32_URL)
	-rm -f provisions.iso

$(ULTRADEFRAG_64):
	$(WGET) -O $@ $(ULTRADEFRAG_64_URL)
	-rm -f provisions.iso

$(UNXUTILS):
	$(WGET) -O $@ $(UNXUTILS_URL)
	-rm -f provisions.iso

$(UNZIP_EXE): $(UNXUTILS)
	unzip -o -j $< usr/local/wbin/$@
	-upx -9 $@
	touch --reference $@ $<
	-chmod +x $@
	-rm -f provisions.iso

$(VAGRANT_PUB):
	$(WGET) -O $@ $(VAGRANT_PUB_URL)
	-rm -f provisions.iso

$(VBOX_ISO):
	$(WGET) -O $@ $(VBOX_ISO_URL)
	-rm -f provisions.iso

$(VMWARE_TOOLS_TAR):
	$(WGET) -O $@ $(VMWARE_TOOLS_TAR_URL)
	-rm -f provisions.iso

$(WGET_EXE):
	$(WGET) -O $@ $(WGET_URL)
	touch --reference $@ .$@
	-upx -9 $@
	touch --reference .$@ $@
	-rm -f .$@
	-rm -f provisions.iso

$(WUA_64):
	$(WGET) -O $@ $(WUA_64_URL)
	-rm -f provisions.iso

$(WUA_32):
	$(WGET) -O $@ $(WUA_32_URL)
	-rm -f provisions.iso

7z.exe: $(SEVENZIP_32) $(LESSMSI) 7z.dll
	./lessmsi.exe   x $< tmp\\
	cp -p tmp/SourceDir/Files/7-Zip/$@ $@
	-chmod +x *.exe *.dll
	-rm -f provisions.iso

7z.dll: $(SEVENZIP_32) $(LESSMSI)
	./lessmsi.exe   x $< tmp\\
	cp -p tmp/SourceDir/Files/7-Zip/$@ $@
	-chmod +x *.exe *.dll
	-rm -f provisions.iso

7za.exe: $(SEVENZIP_EXTRA) 7z.exe
	./7z.exe x -y -otmp $<
	cp -p tmp/$@ $@
	-chmod +x *.exe *.dll
	-rm -f provisions.iso

lessmsi.exe:	$(LESSMSI)
	unzip -o -j $<
	-chmod +x *.exe *.dll
	-rm -f provisions.iso

#VBoxGuestAdditions.iso:
#   cp -p "$$SYSTEMDRIVE/Program Files/Oracle/VirtualBox/VBoxGuestAdditions.iso" $@
#   -rm -f provisions.iso

VBoxWindowsAdditions.exe:   $(VBOX_ISO)
	7z x -y $< $@
	-chmod +x $@
	-rm -f provisions.iso

VBoxWindowsAdditions-amd64.exe: $(VBOX_ISO)
	7z x -y $< $@
	-chmod +x $@
	-rm -f provisions.iso

VBoxWindowsAdditions-x86.exe:   $(VBOX_ISO)
	7z x -y $< $@
	-chmod +x $@
	-rm -f provisions.iso

windows.iso:
	-test -f "$$SYSTEMDRIVE/Program Files/VMware/VMware Workstation/windows.iso" && \
		 cp "$$SYSTEMDRIVE/Program Files/VMware/VMware Workstation/windows.iso" $@
	test $@ || \
	test -f "$$SYSTEMDRIVE/Program Files (x86)/VMware/VMware Workstation/windows.iso" && \
		 cp "$$SYSTEMDRIVE/Program Files (x86)/VMware/VMware Workstation/windows.iso" $@
	-rm -f provisions.iso

Windows6.1-KB2842230-x64.msu:   $(KB2842230_64)
	unzip -o -j $< $@
	-rm -f provisions.iso

Windows6.1-KB2842230-x86.msu:   $(KB2842230_32)
	unzip -o -j $< $@
	-rm -f provisions.iso

clean:
	rm -f provisions.iso

realclean:  clean
	rm -fr $(FILES) tmp/ *.exe *.dll *.config *.zip

debug:
	@echo CHEF_VERSION=$(CHEF_VERSION)
	@echo CHEFDK_VERSION=$(CHEFDK_VERSION)
	@echo PUPPET_VERSION=$(PUPPET_VERSION)
	@echo SALT_VERSION=$(SALT_VERSION)

	@echo CHEF_32=$(CHEF_32)
	@echo CHEF_64=$(CHEF_64)
	@echo CHEFDK_32=$(CHEFDK_32)
	@echo CHEFDK_64=$(CHEFDK_64)
	@echo CHOCOLATEY=$(CHOCOLATEY)
	@echo COREUTILS=$(COREUTILS)
	@echo CYGWIN=$(CYGWIN)
	@echo DOTNET4=$(DOTNET4)
	@echo KB2842230_32=$(KB2842230_32)
	@echo KB2842230_64=$(KB2842230_64)
	@echo LESSMSI=$(LESSMSI)
	@echo OPENSSH=$(OPENSSH)
	@echo NUGET=$(NUGET)
	@echo POWERSHELL_32=$(POWERSHELL_32)
	@echo POWERSHELL_64=$(POWERSHELL_64)
	@echo PUPPET_32=$(PUPPET_32)
	@echo PUPPET_64=$(PUPPET_64)
	@echo SALT_32=$(SALT_32)
	@echo SALT_64=$(SALT_64)
	@echo SCOOP=$(SCOOP)
	@echo SDELETE=$(SDELETE)
	@echo SEVENZIP_32=$(SEVENZIP_32)
	@echo SEVENZIP_64=$(SEVENZIP_64)
	@echo TEE_EXE=$(TEE_EXE)
	@echo ULTRADEFRAG_32=$(ULTRADEFRAG_32)
	@echo ULTRADEFRAG_64=$(ULTRADEFRAG_64)
	@echo UNXUTILS=$(UNXUTILS)
	@echo UNZIP_EXE=$(UNZIP_EXE)
	@echo VAGRANT_PUB=$(VAGRANT_PUB)
	@echo VBOX_ISO=$(VBOX_ISO)
	@echo VMWARE_TOOLS_TAR=$(VMWARE_TOOLS_TAR)
	@echo WGET_EXE=$(WGET_EXE)
	@echo WUA_64=$(WUA_64)
	@echo WUA_32=$(WUA_32)
	@echo COREUTILS_URL=$(COREUTILS_URL)
	@echo LESSMSI_URL=$(LESSMSI_URL)
	@echo SEVENZIP_EXTRA_URL=$(SEVENZIP_EXTRA_URL)
	@echo UNXUTILS_URL=$(UNXUTILS_URL)

.PHONY: all
.PHONY: clean
.PHONY: debug
.PHONY: help
.PHONY: iso
.PHONY: realclean
